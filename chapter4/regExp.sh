#!/bin/bash
# 正则表达式练习

# 正则表达式      描述                 示例
# POSIX 类
# ^         行起始标志           ^tux 匹配以tux起始的行
# $         行尾标志             tux$ 匹配以tux结尾的行
# .         匹配任意一个字符     Hack. 匹配 Hack1 和 Hack2 ,但不匹配Hack12,只匹配一个字符
# []        匹配包含在[字符]之中的任意一个字符  coo[k]匹配cook或cool
# [^]       匹配除[^字符]之外的任意一个字符   9[[^01] 匹配92或93，但不匹配91或90
# [-]       匹配[]中指定范围内的任意一个字符  [1-5]表示匹配1-5的任意一个数字
# ?         匹配之前的项1次或0次   colou?r 匹配color或colour,但不匹配colouur
# +         匹配之前的项1次或多次   Rollno-9+ 匹配Rollno-99 Rollno-9,但不匹配Rollno-
# *         匹配之前的项0次或多次   co*l 匹配cl,col,coool等
# ()        创建一个用于匹配的子串  ma(tri)? 匹配max或maxtrix
# {n}       匹配之前的项n次         [0-9]{3} 匹配任意一个三位数,等价[0-9][0-9][0-9]
# {n,}      之前的项至少匹配n次     [0-9]{2,}匹配任意一个两位或多位数字
# {n,m}     指定之前的项所必须匹配的最小和最大次数 [0-9]{2,5}                   匹配两位到五位数字
# |         交替---匹配|两边的任意一项  Oct (1st|2nd)匹配Oct 1st 或Oct 2nd
# \         转义符
 
 
# Perl风格的元字符
# \b        单词边界               \bcool\b 匹配cool但不匹配coolant
# \B        非单词边界             cool\B 匹配coolant,但不匹配cool
# \d        单个数字字符           b\db 匹配 b2b ,但不匹配bcb
# \D        单个非数字字符
# \w        单个单词字符(字母，数字与_)    \w 匹配1或a，但不匹配  &
# \W        单个非单词字符                 \W 匹配&，但不匹配1或a
# \n        换行符                 \n 匹配一个新行
# \s        单个空白字符           x\sx 匹配 x x
# \S        单个非空白字符
# \r        回车                   \r 匹配回车

# 匹配 邮件的egrep表达式
# [A-Za-z0-9.]+@[A-Za-z0-9]+\.[a-zA-Z]{2,4}

# 匹配http的表达式
# http.?://[a-zA-Z0-9\-\.]+\.[a-zA-Z]{2,4}


